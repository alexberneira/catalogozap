import { NextRequest, NextResponse } from 'next/server'
import { supabase } from '@/lib/supabaseClient'

export async function GET(request: NextRequest) {
  try {
    console.log('üß™ Test API chamada')
    
    // Teste 1: Conex√£o b√°sica
    console.log('üîç Teste 1: Conex√£o b√°sica...')
    const { data: testData, error: testError } = await supabase
      .from('users')
      .select('count')
      .limit(1)

    if (testError) {
      console.log('‚ùå Erro na conex√£o b√°sica:', testError)
      return NextResponse.json({ 
        error: 'Erro de conex√£o com banco',
        details: testError 
      }, { status: 500 })
    }

    console.log('‚úÖ Conex√£o b√°sica OK')

    // Teste 2: Buscar usu√°rio espec√≠fico
    console.log('üîç Teste 2: Buscar usu√°rio meuca...')
    const { data: userData, error: userError } = await supabase
      .from('users')
      .select('id, username, email')
      .eq('username', 'meuca')
      .single()

    if (userError) {
      console.log('‚ùå Erro ao buscar usu√°rio:', userError)
      return NextResponse.json({ 
        error: 'Erro ao buscar usu√°rio',
        details: userError 
      }, { status: 500 })
    }

    console.log('‚úÖ Usu√°rio encontrado:', userData)

    // Teste 3: Verificar tabelas de analytics
    console.log('üîç Teste 3: Verificar tabelas de analytics...')
    const { data: catalogViews, error: cvError } = await supabase
      .from('catalog_views')
      .select('count')
      .limit(1)

    if (cvError) {
      console.log('‚ùå Erro ao verificar catalog_views:', cvError)
      return NextResponse.json({ 
        error: 'Tabela catalog_views n√£o encontrada',
        details: cvError 
      }, { status: 500 })
    }

    console.log('‚úÖ Tabela catalog_views OK')

    const { data: whatsappClicks, error: wcError } = await supabase
      .from('whatsapp_clicks')
      .select('count')
      .limit(1)

    if (wcError) {
      console.log('‚ùå Erro ao verificar whatsapp_clicks:', wcError)
      return NextResponse.json({ 
        error: 'Tabela whatsapp_clicks n√£o encontrada',
        details: wcError 
      }, { status: 500 })
    }

    console.log('‚úÖ Tabela whatsapp_clicks OK')

    // Teste 4: Tentar inserir dados de teste
    console.log('üîç Teste 4: Inserir dados de teste...')
    const { data: insertData, error: insertError } = await supabase
      .from('catalog_views')
      .insert({
        user_id: userData.id,
        username: userData.username,
        ip_address: '127.0.0.1',
        user_agent: 'Test API',
        referrer: 'test',
      })
      .select()

    if (insertError) {
      console.log('‚ùå Erro ao inserir dados de teste:', insertError)
      return NextResponse.json({ 
        error: 'Erro ao inserir dados de teste',
        details: insertError 
      }, { status: 500 })
    }

    console.log('‚úÖ Dados de teste inseridos:', insertData)

    return NextResponse.json({ 
      success: true,
      message: 'Todos os testes passaram!',
      user: userData,
      test_insert: insertData
    })

  } catch (error) {
    console.error('‚ùå Erro na API de teste:', error)
    return NextResponse.json({ 
      error: 'Erro interno',
      details: error 
    }, { status: 500 })
  }
} 